#! /usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of Willow Garage, Inc. nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


PACKAGE='ivudp'

import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator import *
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
ctrl = gen.add_group("Imu")

#Name   Type     Reconfiguration level      Description     Default     Min    Max

ctrl.add("send_data_0", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_1", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_2", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_3", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_4", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_5", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_6", str_t, 0, "udp send data parameter", "0123456789")
ctrl.add("send_data_7", str_t, 0, "udp send data parameter", "01")

# ctrl.add("objlane", int_t, 1, "int parameter", 1, 0, 5)

# ctrl.add("currentlane", int_t, 2, "int parameter", 1, 0, 5)

# ctrl.add("PubMsg", bool_t, 3, "Boolean parameter", True)


# road_enum = gen.enum([ gen.const("straight",   		 int_t, 0, "A parking_lot constant"),
#                        gen.const("left_little_curve",     int_t, 1, "A load_zone constant"),
#                        gen.const("left_big_curve",     int_t, 2, "A load_zone constant"),
#                        gen.const("right_little_curve",        int_t, 3, "A drop_off constant"),
#                        gen.const("right_big_curve",        int_t, 4, "A drop_off constant")],
#                        "An enum to set pos_attribution")


exit(gen.generate(PACKAGE, "ivudp", "ivudp"))

