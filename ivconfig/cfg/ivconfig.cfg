#! /usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2009, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of Willow Garage, Inc. nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


PACKAGE='ivconfig'

import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator import *
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
ctrl = gen.add_group("Controler")
attr = gen.add_group("Attributions")

#Name   Type     Reconfiguration level      Description     Default     Min    Max


ctrl.add("pcontrol", double_t, 0, "double parameter", 0, -10, 10)

ctrl.add("icontrol", double_t, 1, "double parameter", 0, -2, 10)

ctrl.add("dcontrol", double_t, 2, "double parameter",  0, -10, 10)

ctrl.add("control", bool_t, 3, "Boolean parameter", False)

pos_enum = gen.enum([ gen.const("parking_lot",   int_t, 0, "A parking_lot constant"),
                      gen.const("load_zone",     int_t, 1, "A load_zone constant"),
                      gen.const("drop_off",      int_t, 2, "A drop_off constant"),
                      gen.const("normal", 		 int_t, 3, "An normal constant")],
                    "An enum to set pos_attribution")

attr.add("pos_attr", int_t, 0, "A position parameter which is edited via an enum", 0, 0, 3, edit_method=pos_enum)

road_enum = gen.enum([ gen.const("straight",   		 int_t, 0, "A parking_lot constant"),
                       gen.const("little_curve",     int_t, 1, "A load_zone constant"),
                       gen.const("big_curve",        int_t, 2, "A drop_off constant")],
                    "An enum to set pos_attribution")

attr.add("road_attr", int_t, 0, "A position parameter which is edited via an enum", 0, 0, 2, edit_method=road_enum)

attr.add("attribution", bool_t, 0, "Boolean parameter", False)

exit(gen.generate(PACKAGE, "ivconfig", "ivconfig"))

